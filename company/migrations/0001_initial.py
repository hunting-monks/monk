# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import datetime
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('first_name', models.CharField(max_length=50, db_index=True)),
                ('last_name', models.CharField(max_length=50, db_index=True)),
                ('email', models.CharField(db_index=True, max_length=254, blank=True)),
                ('middleInitial', models.CharField(default=b'', max_length=1, blank=True)),
                ('address', models.CharField(default=b'', max_length=100, blank=True)),
                ('address2', models.CharField(default=b'', max_length=100, blank=True)),
                ('city', models.CharField(max_length=35, blank=True)),
                ('state', models.CharField(default=b'', max_length=2, blank=True)),
                ('zip', models.CharField(default=b'', max_length=10, blank=True)),
                ('phone', models.CharField(default=b'', max_length=25, blank=True)),
                ('area', models.IntegerField(choices=[(1, b'Accounting'), (2, b'Computer Hardware'), (3, b'Computer Software'), (4, b'Internet')])),
                ('level', models.IntegerField(choices=[(1, b'Entry'), (2, b'Junior'), (3, b'Senior'), (4, b'Veteran'), (5, b'Principle'), (6, b'Distinguished')])),
                ('expected_salary', models.IntegerField()),
                ('current_salary', models.IntegerField()),
                ('resume_path', models.CharField(max_length=100)),
                ('current_company', models.CharField(max_length=200)),
                ('current_title', models.CharField(max_length=50)),
                ('current_start_date', models.DateField()),
                ('current_end_date', models.DateField()),
                ('prev_company1', models.CharField(default=b'', max_length=200, blank=True)),
                ('prev_title1', models.CharField(default=b'', max_length=50, blank=True)),
                ('prev_start_date1', models.DateField(default=datetime.datetime(1, 1, 1, 0, 0), blank=True)),
                ('prev_end_date1', models.DateField(default=datetime.datetime(1, 1, 1, 0, 0), blank=True)),
                ('prev_company2', models.CharField(default=b'', max_length=200, blank=True)),
                ('prev_title2', models.CharField(default=b'', max_length=50, blank=True)),
                ('prev_start_date2', models.DateField(default=datetime.datetime(1, 1, 1, 0, 0), blank=True)),
                ('prev_end_date2', models.DateField(default=datetime.datetime(1, 1, 1, 0, 0), blank=True)),
                ('prev_company3', models.CharField(default=b'', max_length=200, blank=True)),
                ('prev_title3', models.CharField(default=b'', max_length=50, blank=True)),
                ('prev_start_date3', models.DateField(default=datetime.datetime(1, 1, 1, 0, 0), blank=True)),
                ('prev_end_date3', models.DateField(default=datetime.datetime(1, 1, 1, 0, 0), blank=True)),
                ('graduate_school', models.CharField(max_length=50)),
                ('degree', models.CharField(max_length=10)),
                ('graduate_date', models.DateField()),
                ('graduate_school2', models.CharField(default=b'', max_length=50, blank=True)),
                ('degree2', models.CharField(default=b'', max_length=10, blank=True)),
                ('graduate_date2', models.DateField(default=datetime.datetime(1, 1, 1, 0, 0), blank=True)),
                ('graduate_school3', models.CharField(default=b'', max_length=50, blank=True)),
                ('degree3', models.CharField(default=b'', max_length=10, blank=True)),
                ('graduate_date3', models.DateField(default=datetime.datetime(1, 1, 1, 0, 0), blank=True)),
                ('source', models.IntegerField(choices=[(1, b'Internal referral'), (2, b'Self submitted'), (3, b'Linkedin')])),
                ('source_id', models.BigIntegerField(default=0)),
                ('deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=200, verbose_name=b'Company Name')),
                ('businessDescription', models.CharField(max_length=20, verbose_name=b'Business Description', blank=True)),
                ('area', models.IntegerField(choices=[(1, b'Accounting'), (2, b'Computer Hardware'), (3, b'Computer Software'), (4, b'Internet')])),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=50, verbose_name=b'Address', blank=True)),
                ('address2', models.CharField(max_length=50)),
                ('zipcode', models.CharField(max_length=10, verbose_name=b'Zip')),
                ('city', models.CharField(max_length=50, verbose_name=b'City')),
                ('province', models.CharField(max_length=20, verbose_name=b'Province')),
                ('state', models.CharField(max_length=2, verbose_name=b'State', blank=True)),
                ('deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('administrator', models.OneToOneField(related_name='company', to=settings.AUTH_USER_MODEL)),
                ('administrators', models.ManyToManyField(related_name='companies', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('first_name', models.CharField(max_length=50, db_index=True)),
                ('last_name', models.CharField(max_length=50, db_index=True)),
                ('email', models.CharField(db_index=True, max_length=254, blank=True)),
                ('middleInitial', models.CharField(max_length=1, blank=True)),
                ('address', models.CharField(max_length=100, blank=True)),
                ('address2', models.CharField(max_length=100, blank=True)),
                ('city', models.CharField(max_length=35, blank=True)),
                ('state', models.CharField(default=b'', max_length=2, blank=True)),
                ('zip', models.CharField(max_length=10, blank=True)),
                ('phone', models.CharField(max_length=25, blank=True)),
                ('socialId', models.CharField(default=b'', max_length=128, blank=True)),
                ('dob', models.CharField(default=b'', max_length=10, blank=True)),
                ('sex', models.IntegerField(blank=True, choices=[(1, b'M'), (2, b'F')])),
                ('marital_status', models.CharField(blank=True, max_length=2, null=True, verbose_name=b'Marital Status', choices=[(b'S', b'Single'), (b'M', b'Married')])),
                ('isDisabled', models.BooleanField(default=False, verbose_name=b'Is Disabled?')),
                ('ageRange', models.CharField(default=b'', max_length=8, blank=True)),
                ('title', models.CharField(default=b'', max_length=254, blank=True)),
                ('department', models.CharField(default=b'', max_length=128)),
                ('status', models.CharField(max_length=3, choices=[(b'Ped', b'Pending'), (b'Act', b'Active'), (b'Del', b'Deleted')])),
                ('photoUrl', models.CharField(default=b'', max_length=255, blank=True)),
                ('company', models.ForeignKey(related_name='employees', to='company.Company')),
                ('user', models.OneToOneField(null=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=30)),
                ('permission', models.BigIntegerField()),
                ('mask', models.BigIntegerField(choices=[(1, b'Admin'), (4, b'Interviewer'), (8, b'HR'), (16, b'Hiring Manager')])),
                ('deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserDetail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('phone', models.CharField(max_length=20)),
                ('deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company_id', models.ForeignKey(to='company.Company')),
                ('role_id', models.ForeignKey(to='company.Role')),
                ('user_id', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='applicant',
            name='created_by_company',
            field=models.OneToOneField(null=True, blank=True, to='company.Company'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='created_by_user',
            field=models.OneToOneField(related_name='author', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='applicant',
            name='user',
            field=models.OneToOneField(related_name='user', null=True, blank=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='employee',
            unique_together=set([('user',)]),
        ),
    ]
